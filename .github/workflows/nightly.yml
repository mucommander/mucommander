name: Nightly Build

on: 
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  upload-macos-artifacts:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name : Get version
        id: version_macos
        run: |
          echo "FULL_VERSION=$(${{github.workspace}}/gradlew -q printFullVersionName)" >> $GITHUB_OUTPUT

      - name: Checkout 'release'
        uses: actions/checkout@v3
        with:
          repository: mucommander/release
          path: release
          token: ${{ secrets.RELEASE_REPO_TOKEN }}

      - name: Apply 'release' patches
        run: |
          git config --global user.name gh-action
          git config --global user.email gh-action
          git am release/0001-set-credentials-to-Google-Drive.patch
          git am release/0002-set-credentials-to-Dropbox.patch
          git am release/0005-set-credentials-to-OneDrive.patch

      - uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'adopt'

      - name: Build dmg
        uses: gradle/gradle-build-action@v2
        with:
          arguments: dmg

      - name: Upload dmg
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: "mucommander-${{ steps.version_macos.outputs.FULL_VERSION }}.dmg"
          path: "./build/distributions/mucommander-${{ steps.version_macos.outputs.FULL_VERSION }}.dmg"

  upload-linux-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name : Get version
        id: version_linux
        run: |
          echo "FULL_VERSION=$(${{github.workspace}}/gradlew -q printFullVersionName)" >> $GITHUB_OUTPUT
          echo "VERSION=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_OUTPUT

      - uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'adopt'

      - name: Checkout 'release'
        uses: actions/checkout@v3
        with:
          repository: mucommander/release
          path: release
          token: ${{ secrets.RELEASE_REPO_TOKEN }}

      - name: Apply 'release' patches
        run: |
          git config --global user.name gh-action
          git config --global user.email gh-action
          git am release/0001-set-credentials-to-Google-Drive.patch
          git am release/0002-set-credentials-to-Dropbox.patch

      - name: Build portable, tgz, deb, and rpm
        uses: gradle/gradle-build-action@v2
        with:
          arguments: tgz portable deb rpm

      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Sign rpm
        run: |
          rpmsign --key-id='Arik Hadas' --addsign "./build/distributions/mucommander-${{ steps.version_linux.outputs.VERSION }}-1.x86_64.rpm"

      - name: Upload portable
        uses: actions/upload-artifact@master
        with:
          name: "mucommander-${{ steps.version_linux.outputs.FULL_VERSION }}-portable.zip"
          path: "./build/distributions/mucommander-${{ steps.version_linux.outputs.FULL_VERSION }}-portable.zip"

      - name: Upload tgz
        uses: actions/upload-artifact@master
        with:
          name: "mucommander-${{ steps.version_linux.outputs.FULL_VERSION }}.tgz"
          path: "./build/distributions/mucommander-${{ steps.version_linux.outputs.FULL_VERSION }}.tgz"

      - name: Upload deb
        uses: actions/upload-artifact@master
        with:
          name: "mucommander_${{ steps.version_linux.outputs.VERSION }}-1_amd64.deb"
          path: "./build/distributions/mucommander_${{ steps.version_linux.outputs.VERSION }}-1_amd64.deb"

      - name: Upload rpm
        uses: actions/upload-artifact@master
        with:
          name: "mucommander-${{ steps.version_linux.outputs.VERSION }}-1.x86_64.rpm"
          path: "./build/distributions/mucommander-${{ steps.version_linux.outputs.VERSION }}-1.x86_64.rpm"


  upload-windows-artifacts:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name : Get version
        id: version_win
        run: |
          echo "VERSION=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_OUTPUT

      - uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'adopt'

      - name: Checkout 'release'
        uses: actions/checkout@v3
        with:
          repository: mucommander/release
          path: release
          token: ${{ secrets.RELEASE_REPO_TOKEN }}

      - name: Apply 'release' patches
        run: |
          git config --global user.name gh-action
          git config --global user.email gh-action
          git am release/0001-set-credentials-to-Google-Drive.patch
          git am release/0002-set-credentials-to-Dropbox.patch

      - name: Build msi
        uses: gradle/gradle-build-action@v2
        with:
          arguments: msi

      - name: Upload msi
        uses: actions/upload-artifact@master
        with:
          name: "mucommander-${{ steps.version_win.outputs.VERSION }}.msi"
          path: "./build/distributions/mucommander-${{ steps.version_win.outputs.VERSION }}.msi"
