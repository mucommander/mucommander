# Include java runtime classes
-libraryjars  <java.home>/lib/rt.jar

# Keep filenames and line numbers
-keepattributes Exceptions

-dontoptimize
-dontobfuscate
-ignorewarnings
-skipnonpubliclibraryclasses

# Action API uses reflection.
-keepclasseswithmembers class * extends com.mucommander.ui.action.MuAction {
    public *;
}

# Yanfs uses reflection.                                                           
-keep class com.sun.nfs.XFileAccessor 
-keep class com.sun.nfs.XFileExtensionAccessor

# Main class
-keep class com.mucommander.muCommander {
    public static void main(java.lang.String[]);
} 

# Class loader.
-keep class com.mucommander.commons.file.AbstractFileClassLoader {
   public protected *;
}

# Don't obfuscate the JNA library.
-keep class com.sun.jna.** {
    public protected private *;
}

-keep class com.sun.jna.ptr.** {
    public protected private *;
}

-keep class com.sun.jna.win32.** {
    public protected private *;
}

-keep class com.sun.jna.examples.win32.** {
    public protected private *;
}

-keep class com.vmware.vim25.** {
    public protected private *;
}

# Hadoop HDFS.
-keep class org.apache.hadoop.hdfs.DistributedFileSystem
-keep class org.apache.hadoop.net.StandardSocketFactory
-keep class org.apache.hadoop.hdfs.protocol.DatanodeInfo$AdminStates
# Apache Commons logging (Hadoop + JetS3t dependency).
-keep class org.apache.commons.logging.impl.LogFactoryImpl
-keep class org.apache.commons.logging.impl.Jdk14Logger { <init>(...); }
-keep class org.apache.commons.logging.Log
# Keep Enum methods so that they are still considered as Enum at runtime (Hadoop dependency).
-keepclassmembers class * extends java.lang.Enum {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keep class com.jidesoft.plaf.aqua.** { *; }
-keep class com.jidesoft.**

-keep class com.jcraft.jsch.jce.*
-keep class * extends com.jcraft.jsch.KeyExchange
-keep class com.jcraft.jsch.**
-keep class com.jcraft.jzlib.ZStream
-keep class com.jcraft.jsch.Compression
-keep class com.beust.jcommander.** {
    public protected private *;
}
